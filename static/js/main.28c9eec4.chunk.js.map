{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pageRender","statusPrevLink","statusNextLink","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","activePage","setActivePage","activeSelection","setActiveSelection","endOffset","itemOffset","currentItems","slice","length","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAad,EAAW,EAAGW,GAC3BI,EAAiC,IAAhBN,EACjBO,EAAiBP,IAAgBE,EAcvC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EAAiB,OAAS,QACzCM,QAxBa,WACdN,GACHL,EAAaD,EAAc,IAiBzB,oBAUDK,EAAWQ,KAAI,SAAAC,GAAI,OAClB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQf,IAAgBc,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAYT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EAAiB,OAAS,QACzCK,QAnDc,WACfL,GACHN,EAAaD,EAAc,IA4CzB,wBCpEFgB,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAYJ,EAAaE,EACzBG,GAAcL,EAAa,GAAKE,EAEhCI,EAAeT,EAAMU,MAAMF,EAAYD,GAE7C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQW,EAAR,mBAA6BK,EAAa,GAA1C,aACSR,EAAMW,OAASJ,EAAYA,EAAYP,EAAMW,OADtD,eACmEX,EAAMW,OADzE,OAIH,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHC,MAAOR,EACPb,UAAU,eACVsB,SAAW,SAAAC,GACTT,GAAoBS,EAAMC,OAAOH,OACjCT,EAAc,IAPlB,UAUE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOkB,EAAMW,OACb5B,QAASsB,EACTrB,YAAamB,EACblB,aAAcmB,IAGhB,6BACGK,EAAaZ,KAAI,SAAAqB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC3DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.28c9eec4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total:number;\n  perPage:number;\n  currentPage:number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pageRender = getNumbers(1, pageCount);\n  const statusPrevLink = currentPage === 1;\n  const statusNextLink = currentPage === pageCount;\n\n  const nextPageLeft = () => {\n    if (!statusPrevLink) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPageRight = () => {\n    if (!statusNextLink) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: statusPrevLink },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={statusPrevLink ? 'true' : 'false'}\n          onClick={nextPageLeft}\n        >\n          «\n        </a>\n      </li>\n      {pageRender.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: statusNextLink },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={statusNextLink ? 'true' : 'false'}\n          onClick={nextPageRight}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [activePage, setActivePage] = useState(1);\n  const [activeSelection, setActiveSelection] = useState(5);\n\n  const endOffset = activePage * activeSelection;\n  const itemOffset = (activePage - 1) * activeSelection;\n\n  const currentItems = items.slice(itemOffset, endOffset);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${activePage} (items ${itemOffset + 1}`\n          + ` - ${items.length > endOffset ? endOffset : items.length} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={activeSelection}\n            className=\"form-control\"\n            onChange={(event => {\n              setActiveSelection(+event.target.value);\n              setActivePage(1);\n            })}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={activeSelection}\n        currentPage={activePage}\n        onPageChange={setActivePage}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}